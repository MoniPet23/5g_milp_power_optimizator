//Delta_P_eNB = 4.7, Delta_P_SC = 4, Delta_P_BH = 100000;
//P_idle_eNB = 130, P_idle_SC = 6.8, P_idle_BH = 3.9;


NumVirtualNodes = 1; // Number of virtual nodes that represent the core network (index for the virtual node is 1)
NumMacro = 1; // Number of eNBs (we focus on one eNB sector) (index for macro is 2)
NumSmall = 2; // Number of small cells (index from 3 to 18)
NumUEs = 3; // Number of users (index from 19 to 31)
NumAnt = 8;// Number of transceiver chains in eNB/SC 


ANEdges = // Feasible access network links
 // <From BS, to UE, Number of PRBs needed, power per PRB (Watt), (spectrum efficiency * BW per PRB)(bps)>
{
<2,5, 1, 0.3981, 50.924208e+07>,
<2,6, 10, 0.3981, 50.924208e+07>,
<3,6, 1, 0.6689, 4.581412e+06>,
<3,7, 10, 0.6689, 4.581412e+06>,
<4,5, 5, 0.5899, 2.536331e+07>,
<4,7, 2, 0.5899, 2.536331e+07>,
 };
 
 
BHEdges= // Feasible backhaul network links (before the algorithm is applied)
 // <From node, to node, maximum rate in Mbps (capacity), parameter beta in eq. 12 MSWiM (Watt), bandwidth (Hz)>
{
<1,2, 100000.00,0, 10000000000000000>,
<1,3, 100000.00,0, 10000000000000000>,
<1,4, 100000.00,0, 10000000000000000>,
<2,3, 3500.00,10.082229e-05, 200000000>,
<3,4, 2501.91,50.082229e-06, 200000000>,
 };
 
 
User = {
<1, 5>,
<1, 6>,
<1, 7>,
 };
 
 
Demand = {
<1, 5, 100>,
<1, 6, 100>,
<1, 7, 100>,
 };
 
 
numbreak = 5;
breakpt = [8, 16, 24, 30, 3.250000e+01];
coeff1 = [3.187500e+01, 8.160000e+03, 2.088960e+06, 1.761608e+08, 2.000104e+09]; 
